[{"/home/eric/Development/Projects/review-with-friends/frontend/src/App.js":"1","/home/eric/Development/Projects/review-with-friends/frontend/src/index.js":"2","/home/eric/Development/Projects/review-with-friends/frontend/src/ pages/LoginForm.js":"3","/home/eric/Development/Projects/review-with-friends/frontend/src/ pages/HomePage.js":"4","/home/eric/Development/Projects/review-with-friends/frontend/src/ pages/SignUpForm.js":"5","/home/eric/Development/Projects/review-with-friends/frontend/src/reportWebVitals.js":"6","/home/eric/Development/Projects/review-with-friends/frontend/src/components/PrivateRoute.js":"7"},{"size":2972,"mtime":1624333446281,"results":"8","hashOfConfig":"9"},{"size":587,"mtime":1624246933864,"results":"10","hashOfConfig":"9"},{"size":1113,"mtime":1624307071480,"results":"11","hashOfConfig":"9"},{"size":234,"mtime":1624281840568,"results":"12","hashOfConfig":"9"},{"size":1343,"mtime":1624248345646,"results":"13","hashOfConfig":"9"},{"size":362,"mtime":1624185672905,"results":"14","hashOfConfig":"9"},{"size":490,"mtime":1624281502106,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"n2at36",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/eric/Development/Projects/review-with-friends/frontend/src/App.js",["31","32"],"import { Component, Profiler } from 'react';\nimport './App.css';\nimport SignUpForm from './ pages/SignUpForm';\nimport LoginForm from './ pages/LoginForm';\nimport HomePage from './ pages/HomePage';\nimport {Route, Switch } from 'react-router-dom';\nimport PrivateRoute from './components/PrivateRoute';\n\nconst baseUrl = \"http://localhost:3000\"\n\nclass App extends Component {\n  // store user in state \n  state = {\n    user: {},\n    error: \"\"\n  }\n\n  //send this down to any component we wish to stay logged into \n  componentDidMount(){\n    this.validateUser()\n  }\n\n  validateUser = () => {\n    let token = localStorage.getItem('token')\n    if(token){\n      fetch(baseUrl + \"profile\", {\n        method: \"GET\", \n        headers: {\n          \"Authorization\": `Bearer ${token}`\n        }\n      })\n      .then(response => response.json())\n      .then(result => {\n        if(result.id){\n          this.setState({\n            user: result\n          })\n        }\n      })\n    }\n  }\n\n  signUp = user => {\n    fetch(baseUrl + \"/users\", {\n      method: \"POST\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        //data being sent must match what backend (controller) is expecting, w/ re to first_name, last_name\n        user: {\n          first_name: user.firstName,\n          last_name: user.lastName,\n          username: user.username,\n          password: user.password\n        }\n      })\n    })\n    .then(response => response.json())\n    .then(user => this.setState({ user }) )\n  }\n\n  login = (username, password, history) => {\n    fetch(baseUrl + \"/login\", {\n      method: \"POST\", \n      headers: {\n        \"Content-Type\": 'application/json'\n      }, \n      body: JSON.stringify({\n        user: {\n          username,\n          password \n        }\n      })\n    })\n    .then(response => response.json())\n    .then(result => {\n      if(result.token){\n        localStorage.setItem('token', result.token)\n        this.setState({\n          user: result.user\n        })\n        history.push('/')\n      } else {\n        this.setState({\n          error: result.error\n        })\n      }\n    })\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/signup\" render={(routerProps) => <SignUpForm {...routerProps} signUp={this.signUp} />} />\n          <Route path=\"/login\" render={(routerProps) => <LoginForm {...routerProps} login={this.login} error={this.state.error} />} />\n\n          {/* privateRoute placed below other routes so Switch can see those routes and render the login page   */}\n          {/* <PrivateRoute path=\"/\" component={HomePage} user={this.state.user} /> */}\n          \n          {/* Homepage route: use for landing page and provide login link up top  */}\n          <Route exact path=\"/\" render={(routerProps) => <HomePage {...routerProps} user={this.state.user} />} />\n        </Switch>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","/home/eric/Development/Projects/review-with-friends/frontend/src/index.js",[],"/home/eric/Development/Projects/review-with-friends/frontend/src/ pages/LoginForm.js",[],"/home/eric/Development/Projects/review-with-friends/frontend/src/ pages/HomePage.js",[],"/home/eric/Development/Projects/review-with-friends/frontend/src/ pages/SignUpForm.js",[],"/home/eric/Development/Projects/review-with-friends/frontend/src/reportWebVitals.js",[],"/home/eric/Development/Projects/review-with-friends/frontend/src/components/PrivateRoute.js",[],{"ruleId":"33","severity":1,"message":"34","line":1,"column":21,"nodeType":"35","messageId":"36","endLine":1,"endColumn":29},{"ruleId":"33","severity":1,"message":"37","line":7,"column":8,"nodeType":"35","messageId":"36","endLine":7,"endColumn":20},"no-unused-vars","'Profiler' is defined but never used.","Identifier","unusedVar","'PrivateRoute' is defined but never used."]